###############################################################################
#  Static Web CI Template
###############################################################################

variables:
  DOCKER_IMAGE: python:3-alpine
  DEPLOY_TARGET_ENVIRONMENT: "dev"
  APP_RELEASE_DESCRIPTION: "Release $CI_COMMIT_TAG de l'application $APPLICATION_NAME"
  BUILD_DIR: "dist"

workflow:
  rules:
    # Seulement avec un Tag protégé ayant un nom correspondant à l'expression régulière ^v[0-9].[0-9].[0-9]+$
    # https://docs.gitlab.com/ee/user/project/protected_tags.html
    - if: $CI_COMMIT_TAG != null && $CI_COMMIT_REF_PROTECTED
      variables:
        DEPLOY_TARGET_ENVIRONMENT: "prod"  # Override globally-defined DEPLOY_TARGET_ENVIRONMENT
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - when: always

stages:
  - prepare
  - build
  - test
  - release

###############################################################################

web_prepare:
  stage: prepare
  image: $DOCKER_IMAGE
  environment: $DEPLOY_TARGET_ENVIRONMENT
  before_script:
    - | 
      echo "APPLICATION_NAME=${CI_PROJECT_NAMESPACE##*/}-${CI_PROJECT_NAME}" > application.env
  script:
    - echo "## Prepare"
  artifacts:
    reports:
      dotenv: application.env


web_build:
  stage: build
  image: $DOCKER_IMAGE
  environment: $DEPLOY_TARGET_ENVIRONMENT
  before_script:
    - echo "## Build"
    - export MYPWD=$PWD
    - test -e $BUILD_DIR || mkdir $BUILD_DIR
    - mkdir build
  after_script:
    - cd $BUILD_DIR
    - tar -cz --exclude="build" --exclude=".git*" -f ${CI_PROJECT_DIR}/build/${APPLICATION_NAME}.tgz .
    - echo "PACKAGE_URL=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/jobs/${CI_JOB_ID}/artifacts/build/${APPLICATION_NAME}.tgz" > ${CI_PROJECT_DIR}/build.env
  artifacts:
    paths:
      - build
    expire_in: 1 week
    reports:
      dotenv: build.env

web_test:
  stage: test
  image: $DOCKER_IMAGE
  environment: $DEPLOY_TARGET_ENVIRONMENT
  script:
    - echo "## Testing application"

# https://docs.gitlab.com/ee/topics/release_your_application.html
web_release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  environment: $DEPLOY_TARGET_ENVIRONMENT
  before_script:
    - apk add curl
    - |
      curl -L http://01vw-wsus.bigard.local/bigard-CA.crt -o /usr/local/share/ca-certificates/bigard-CA.crt
    - update-ca-certificates
  script:
    - echo "## Release"
    - |
      curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/${APPLICATION_NAME}.tgz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${APPLICATION_NAME}/${CI_COMMIT_TAG}/${APPLICATION_NAME}.tgz"
  release:
    description: $APP_RELEASE_DESCRIPTION
    tag_name: "$CI_COMMIT_TAG"
    assets:
      links:
        - name: 'Web site files'
          url: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${APPLICATION_NAME}/${CI_COMMIT_TAG}/${APPLICATION_NAME}.tgz
  rules:
    - if: $CI_COMMIT_TAG != null && $CI_COMMIT_REF_PROTECTED

###############################################################################

